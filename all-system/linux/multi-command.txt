## 一些 Linux 上重要的命令

* xargs 命令的使用
   - xargs -nNUM   # NUM 是数字，表示执行一次用的参数个数，默认是所有
   - 练习
      ```
      ak.sh 是一个脚本，内容为：
      #!/bin/bash
      # 输出接收到的所有参数
      echo $*
      ```
      ```
      arg.txt 是一个文本，内容为：
      aaa
      bbb
      
      ccc
      ```
      ```
      执行 cat arg.txt | xargs -I {} ./ak.sh "--> {} <--"
      输出结果为：
      --> aaa <--
      --> bbb <--
      --> ccc <--
      ```



* 一些输出
   ```
   echo $$ 返回登录shell的PID
   echo $? 返回上一个命令的状态，0表示没有错误，其它任何值表明有错误
   echo $# 返回传递到脚本的参数个数
   echo $* 以一个单字符串显示所有向脚本传递的参数，与位置变量不同，此选项参数可超过9个
   echo $! 返回后台运行的最后一个进程的进程ID号
   echo $@ 返回传递到脚本的参数个数，但是使用时加引号，并在引号中返回每个参数
   echo $- 显示shell使用的当前选项
   echo $0 是脚本本身的名字
   echo $_ 是保存之前执行的命令的最后一个参数
   echo $1 传入脚本的第一个参数
   echo $2 传入脚本的第二个参数
   ```

* GUI的 terminal
   - 字体变小 ctrl + -
   - 字体变大 ctrl + +
* 查看系统中占用cpu或内存最高的进程信息
   - https://blog.csdn.net/myli_binbin/article/details/121249985
   - ps memory占用排序查看进程
      - ps aux --sort -rss | head
      - ps -eo pid,ppid,%mem,%cpu,cmd --sort=-%mem | head # 输出中仅展示有关内存消耗过程的特定信息
      - ps -eo pid,ppid,%mem,%cpu,comm --sort=-%mem | head # 只看命令名称而不是命令的绝对路径，则使用这个
   - ps cpu占用排序查看进程
      - ps aux --sort=-pcpu # 按cpu使用率倒序排序
      - ps aux --sort=pcpu # 按cpu使用率升序排序

* top 命令查看是否有异常占用内存或cpu的进程
   - root 命令执行 ls -ilha /proc/进程号/exe
      - 这条指令发现病毒文件执行的所在位置，如果是引用文件则进入引用文件所在的位置
      - kill -9 进程号 # 杀掉进程
      - 删除刚刚发现的病毒文件所在位置
   - linux病毒查杀 https://www.cnblogs.com/iwalkman/p/10282291.html

* 重要的命令
   - xkill        # 执行后，鼠标点击某窗口，可以进行窗口所在进程强杀
   - xmodmap -pke # 对键盘的键位码和其对应的描述符输出打印到终端
      - xev       # 执行后，交互式地点击按键可以在终端输出键位码等信息
   - xprop        # 执行后，鼠标点击某窗口，可以得到窗口所在程序的名称
   - pidof 程序名 # 查看指定程序的 pid
      - 程序名是通过 ps 查询出来的最终执行的程序文件名
   - ls -ilha /proc/进程号/exec # 查看对应进程是执行哪个文件执行的
   - sensors      # 查看各硬件温度，查看风扇转速

* 关于网络的一些命令
   - NetworkManager
      - nmcli general status                            # 查看网络状态
      - nmcli networking on                             # 允许被 NetworkManager 网络控制
      - nmcli networking off                            # 不允许被 NetworkManager 网络控制
      - nmcli networking connectivity [check]           # 查看网络健康状态
         - none      # the host is not connected to any network
         - portal    # the host is behind a captive portal and cannot reach the full Internet
         - limited   # the host is connected to a network, but it has no access to the Internet
         - full      # the host is connected to a network and has full access to the Internet
         - unknown   # the connectivity status cannot be found out
      - nmcli connection
         - nmcli connection show                        # 显示连接的网络
         - nmcli connection up [id|uuid|path]           # 激活网络
            - uuid 可以通过 nmcli connection show 获取
         - nmcli connection down [id|uuid|path]         # 关闭网络
            - uuid 可以通过 nmcli connection show 获取
      - nmcli device                                    # 网络接口管理
         - nmcli device show                            # 查看各网络接口的详细信息
         - nmcli device status                          # 查看各网络接口的状态
         - nmcli device wifi connect wifi名 password wifi密码    # 连接wifi
         - nmcli device wifi list                       # 列出wiffi名单
         - nmcli device wifi show                       # 显示已连wifi的二维码与密码
      - nmcli radio {all | wifi | wwan} [ARGUMENTS...]  # show radio switches status, or enable and disable the switches

* 一些其它的软件和服务
   - DNSmasq                                            # NDS 服务软件
* namp 的一些命令
   - https://blog.csdn.net/Promise_Code/article/details/108733258


