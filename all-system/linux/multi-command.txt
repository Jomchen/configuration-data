## 一些 Linux 上重要的命令

* 系统级命令
   - lsmod    # 查看加载的内核模块
   - lspci -v # 查看识别的所有设备

* xargs 命令的使用
   - xargs -nNUM   # NUM 是数字，表示执行一次用的参数个数，默认是所有
   - 练习
      ```
      ak.sh 是一个脚本，内容为：
      #!/bin/bash
      # 输出接收到的所有参数
      echo $*
      ```
      ```
      arg.txt 是一个文本，内容为：
      aaa
      bbb
      
      ccc
      ```
      ```
      执行 cat arg.txt | xargs -I {} ./ak.sh "--> {} <--"
      输出结果为：
      --> aaa <--
      --> bbb <--
      --> ccc <--
      ```

* 一些信号输出
   ```
   echo $$ 返回登录shell的PID
   echo $? 返回上一个命令的状态，0表示没有错误，其它任何值表明有错误
   echo $# 返回传递到脚本的参数个数
   echo $* 以一个单字符串显示所有向脚本传递的参数，与位置变量不同，此选项参数可超过9个
   echo $! 返回后台运行的最后一个进程的进程ID号
   echo $@ 返回传递到脚本的参数个数，但是使用时加引号，并在引号中返回每个参数
   echo $- 显示shell使用的当前选项
   echo $0 是脚本本身的名字
   echo $_ 是保存之前执行的命令的最后一个参数
   echo $1 传入脚本的第一个参数
   echo $2 传入脚本的第二个参数
   ```

* GUI的 terminal
   - 字体变小 ctrl + -
   - 字体变大 ctrl + +
* 查看系统中占用cpu或内存最高的进程信息
   - https://blog.csdn.net/myli_binbin/article/details/121249985
   - ps memory占用排序查看进程
      - ps aux --sort -rss | head
      - ps -eo pid,ppid,%mem,%cpu,cmd --sort=-%mem | head # 输出中仅展示有关内存消耗过程的特定信息
      - ps -eo pid,ppid,%mem,%cpu,comm --sort=-%mem | head # 只看命令名称而不是命令的绝对路径，则使用这个
   - ps cpu占用排序查看进程
      - ps aux --sort=-pcpu # 按cpu使用率倒序排序
      - ps aux --sort=pcpu # 按cpu使用率升序排序

* top 命令查看是否有异常占用内存或cpu的进程
   - root 命令执行 ls -ilha /proc/进程号/exe
      - 这条指令发现病毒文件执行的所在位置，如果是引用文件则进入引用文件所在的位置
      - kill -9 进程号 # 杀掉进程
      - 删除刚刚发现的病毒文件所在位置
   - linux病毒查杀 https://www.cnblogs.com/iwalkman/p/10282291.html

* GUI命令
   - xkill        # 执行后，鼠标点击某窗口，可以进行窗口所在进程强杀
   - xmodmap -pke # 对键盘的键位码和其对应的描述符输出打印到终端
      - xev       # 执行后，交互式地点击按键可以在终端输出键位码等信息
   - xprop        # 执行后，鼠标点击某窗口，可以得到窗口所在程序的名称
   - pidof 程序名 # 查看指定程序的 pid
      - 程序名是通过 ps 查询出来的最终执行的程序文件名
   - ls -ilha /proc/进程号/exec # 查看对应进程是执行哪个文件执行的
   - sensors      # 查看各硬件温度，查看风扇转速，需要安装一个软件？
   - s-tui        # 查看各硬件的温度监控信息，需要安装 s-tui

* NetworkManager
   - nmcli general status                            # 查看网络状态
   - nmcli networking on                             # 允许被 NetworkManager 网络控制
   - nmcli networking off                            # 不允许被 NetworkManager 网络控制
   - nmcli networking connectivity [check]           # 查看网络健康状态
      - none      # the host is not connected to any network
      - portal    # the host is behind a captive portal and cannot reach the full Internet
      - limited   # the host is connected to a network, but it has no access to the Internet
      - full      # the host is connected to a network and has full access to the Internet
      - unknown   # the connectivity status cannot be found out
   - nmcli connection
      - nmcli connection show                        # 显示连接的网络
      - nmcli connection up [id|uuid|path]           # 激活网络
         - uuid 可以通过 nmcli connection show 获取
      - nmcli connection down [id|uuid|path]         # 关闭网络
         - uuid 可以通过 nmcli connection show 获取
   - nmcli device                                    # 网络接口管理
      - nmcli device show                            # 查看各网络接口的详细信息
      - nmcli device status                          # 查看各网络接口的状态
      - nmcli device wifi connect wifi名 password wifi密码    # 连接wifi
      - nmcli device wifi list                       # 列出wiffi名单
      - nmcli device wifi show                       # 显示已连wifi的二维码与密码
   - nmcli radio {all | wifi | wwan} [ARGUMENTS...]  # show radio switches status, or enable and disable the switches

* 一些其它的软件和服务
   - DNSmasq                                            # NDS 服务软件
* namp 的一些命令
   - https://blog.csdn.net/Promise_Code/article/details/108733258


* Xorg 相关
   Xorg 的定义 ------------------------------------------------------------------------------------------
   Xorg 的定义
      Monitor: refers to a physical display device, such as an LCD panel.
      Screen: refers to an X-Window screen (that is: a monitor attached to a display).
      Display: refers to a collection of screens that are in use at the same time showing parts of a single desktop (you can drag windows among all screens in a single display).
      Monitor: 物理的显示设备
      Screen: 已经连接到整体画面的显示器
      Display: 显示画面（因为可以多屏组合显示的功能，组合后的整体画面为 Display）
   
   
   xrandr 的设置 ------------------------------------------------------------------------------------------
   
   lspci -v | grep -A1 -e VGA -e 3D         # 查看显卡
   xdpyinfo | grep -B2 resolution           # 查询分辨率和使用的 dpi
   xrandr --listmonitors                    # 查看已经显示的显示器
   
   ** /etc/X11/xorg.conf 修改分辨率的配置文件
   
   ** 屏幕输出的命令
      xrandr                                                   # 查看显示设备
      xrandr --output VGA1 --primary                           # 设置 VGA1 为主要输出
      xrandr --output VGA1 --mode 1920x1080                    # 设置 VGA1 分辨率为 1920x1080
      xrandr --output VGA1 --mode 1920x1080 --dpi 数字                    # 设置 VGA1 分辨率为 1920x1080，dpi为数字
      xrandr --output VGA1 --mode 1920x1080 --scale 数字                    # 设置 VGA1 分辨率为 1920x1080，并拉伸，数字比1大时字体越小，数字比1小时字体越大
      xrandr --output VGA1 --mode 1920x1080 相对输出方式 LVDS1 # 设置 VGA1 到 LVDS1 的指定侧，并且分辨率为 1920x1080
         - 相对输出方式为 --left-of # 在...左边
         - 相对输出方式为 --right-of # 在...右边
         - 相对输出方式为 --above # 在...上面
         - 相对输出方式为 --below # 在...下面
         - 相对输出方式为 --same-as # 与...同画面
      xrandr --output VGA1 --mode 1920x1080 --rate 90          # 设置 VGA1 分辨率为 1920x1080，刷新率为90
      xrandr --output VGA1 --mode 1920x1080 --rotate <normal/left/right/inverted> # 设置 VGA1 分辨率为 1920x1080，并按指定方向旋转
   
   
   详情看高分辨率显示（i3wm 官网的最后一小节 High-resolution displays(aka HIDPI displays）
   See https://wiki.archlinux.org/index.php/HiDPI for details on how to enable scaling in various parts of the Linux desktop. i3 will read the desired DPI from the Xft.dpi property. The property defaults to 96 DPI, so to achieve 200% scaling, you’d set Xft.dpi: 192 in ~/.Xresources.
   If you are a long-time i3 user who just got a new monitor, double-check that:
   You are using a scalable font (starting with “pango:”) in your i3 config.
   You are using a terminal emulator which supports scaling. You could temporarily switch to gnome-terminal, which is known to support scaling out of the box, until you figure out how to adjust the font size in your favorite terminal emulator.
   
   
   xorg 的配置 ------------------------------------------------------------------------------------------
   
   参考 Xorg(5.2) -> Multihead
   
   ***************************************************案例1-Start
   # 注意！！显卡配置需要先于 Monitor 被加载，
   # 即显卡配置文件名的前缀数字应该小于显示器配置文件的前缀数字
   # 显卡配置文件 05-device.conf
   Section "Device"
       # 应该与实际视频设备品匹配；检查 /var/log/Xorg.0.log 确认这一点
       Identifier "radeon"
       # 驱动器名（显卡名）
       Driver "ati"
       # monitor-VGA-1 是检测到的显示器，通过 xrandr -q 查询
       # VGA 用来引用显示器的标识
       Option "monitor-VGA-1" "VGA"
       Option "monitor-DVI-0" "DVI"
   EndSection
   # 显示器1配置文件 10-monitor.conf
   Section "Monitor"
       Identifier "VGA"
       Option "Rotate" "Left"
   EndSection
   # 显示器2配置文件 10-monitor.conf
   Section "Monitor"
       Identifier "DVI"
       Option "Rotate" "Left"
       Option "RightOf" "VGA"
   EndSection
   ***************************************************案例1-End
   
   ***************************************************案例2-Start
   # 基本显示器配置
   Section "Monitor"
       # 这是显示器的名字，可以通过 xrandr 查看
       Identifier "VGA1"
       # 设置此显示器为主要显示器
       Option "Primary" "true"
   EndSection
   Section "Monitor"
       # 这是显示器的名字，可以通过 xrandr 查看
       Identifier "HDMI1"
       # 将 HDMI1 设置显示为 VGA1 的左边
       Option "LeftOf" "VGA1"
       # 将最喜欢的分辨率设置为 "1920x1080"；
       # 也可以写为 "1920x1080_60.00"，但是这里的 60.00 不知道是什么意义
       Option "PreferredMode" "1920x1080"
       # 屏幕往左旋转90度
       Option "Rotate" "Left"
       # 色深 24
       DefaultDepth 24
   EndSection
   ***************************************************案例2-End
   
   ***************************************************案例3-Start
   # 这是组合屏案例
   Section "Monitor"
       Identifier  "VGA1"
       Option      "PreferredMode" "1024x768"
       Option      "Position" "1920 312"
   EndSection
   Section "Monitor"
       Identifier  "HDMI1"
       Option      "PreferredMode" "1920x1080"
       Option      "Position" "0 0"
   EndSection

   # (0,0)-----------------+
   # |                     |(1920,312)---+
   # |     1920 x 1080     ||            |
   # |        HDMI1        || 1024 x 768 |
   # |                     ||    VGA1    |
   # +---------------------++------------+
   ***************************************************案例3-End
   
   ***************************************************案例4-Start
   # 显示设置（注意三项中名字的相互引用）
   # 设置显示器
   Section "Monitor"
       Identifier "VGA1"
       Modeline "1280x1024_60.00"  109.00  1280 1368 1496 1712  1024 1027 1034 1063 -hsync +vsync
       Option "PreferredMode" "1280x1024_60.00"
   EndSection
   # 显示设置案例
   Section "Screen"
       Identifier "Screen0"
       Monitor "VGA1"
       DefaultDepth 24
       SubSection "Display"
           Modes "1280x1024_60.00"
       EndSubSection
   EndSection
   # 设置显卡设置
   Section "Device"
       Identifier "Device0"
       Driver "intel"
   EndSection
   ***************************************************案例4-End


