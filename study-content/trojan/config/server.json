{
    "run_type": "server",
    "local_addr": "0.0.0.0",
    "local_port": 443,
    "remote_addr": "127.0.0.1",
    "remote_port": 80,
    "password": [
        "password1",
        "password2"
    ],
    "log_level": 1,
    "ssl": {
        "cert": "/path/to/certificate.crt",
        "key": "/path/to/private.key",
        "key_password": "",
        "cipher": "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384",
        "cipher_tls13": "TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384",
        "prefer_server_cipher": true,
        "alpn": [
            "http/1.1"
        ],
        "alpn_port_override": {
            "h2": 81
        },
        "reuse_session": true,
        "session_ticket": false,
        "session_timeout": 600,
        "plain_http_response": "",
        "curves": "",
        "dhparam": ""
    },
    "tcp": {
        "prefer_ipv4": false,
        "no_delay": true,
        "keep_alive": true,
        "reuse_port": false,
        "fast_open": false,
        "fast_open_qlen": 20
    },
    "mysql": {
        "enabled": false,
        "server_addr": "127.0.0.1",
        "server_port": 3306,
        "database": "trojan",
        "username": "trojan",
        "password": "",
        "key": "",
        "cert": "",
        "ca": ""
    }
}


run_type: running trojan as server
local_addr: trojan server will be bound to the specified interface. Feel free to change this to :: or other addresses, if you know what you are doing.
local_port: trojan server will be bound to this port
remote_addr: the endpoint address that trojan server will connect to when encountering other protocols
remote_port: the endpoint port that trojan server will connect when encountering other protocols
password: an array of passwords used for verification
log_level: how much log to dump. 0: ALL; 1: INFO; 2: WARN; 3: ERROR; 4: FATAL; 5: OFF.
ssl: SSL specific configurations
cert: server certificate STRONGLY RECOMMENDED TO BE SIGNED BY A CA. It’s preferred to use the full chain certificate here instead of the certificate alone.
key: private key file for encryption
key_password: password of the private key file
cipher: a cipher list to use
cipher_tls13: a cipher list for TLS 1.3 to use
prefer_server_cipher: whether to prefer server cipher list in a connection
alpn: a list of ALPN protocols to reply
alpn_port_override: overrides the remote port to the specified value if an ALPN is matched. Useful for running NGINX with HTTP/1.1 and HTTP/2 Cleartext on different ports.
reuse_session: whether to reuse SSL session
session_ticket: whether to use session tickets for session resumption
session_timeout: if reuse_session is set to true, specify SSL session timeout
plain_http_response: respond to plain http request with this file (raw TCP)
curves: ECC curves to use
dhparam: if left blank, default (RFC 3526) dhparam will be used, otherwise the specified dhparam file will be used
tcp: TCP specific configurations
prefer_ipv4: whether to connect to the IPv4 address when there are both IPv6 and IPv4 addresses for a domain
no_delay: whether to disable Nagle’s algorithm
keep_alive: whether to enable TCP Keep Alive
reuse_port: whether to enable TCP port reuse (kernel support required)
fast_open: whether to enable TCP Fast Open (kernel support required)
fast_open_qlen: the server’s limit on the size of the queue of TFO requests that have not yet completed the three-way handshake
mysql: see `Authenticator`
