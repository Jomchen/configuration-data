* 命令
   ```
   git fetch                                # 拉取代码记录到本地，不影响本地仓库，缓存区，工作树
   git branch -a                            # 查看所有分支（包含本地和上游分支）
   git branch -vv                           # 查看本地分支跟踪的哪个上游分支
   git log                                  # 查询提交日志
      git log --pretty=oneline              # 只显示版本号和说明
   git reflog                               # 查询本地提交日志
   git show 版本号 -- FILE_PATH             # 查询具体版本号提交记录的修改内容，如果加上 -- FILE_PATH 则是查看指定版本号指定文件的变更内容
   git status                               # 查询本地状态
   git commit -m "MESSAGE"                  # 提交代码
   git checkout -- FILE_PATH                # 将工作区恢复和缓存区一致（缓存区有变更时）；将工作区恢复当前本地仓库一致（缓存区无变更时）
   git reset 版本号 -- FILE_PATH            # 将指定文件恢复到指定版本的内容
   git reset 版本号 --hard                  # 将本地仓库恢复到指定版本索引
   git [-b] checkout BRANCH                 # 切换到指定分支，如果加 -b 则是新建分支
   git merge 分支名A                        # 合并本地分支A到当前分支
   git merge original/分支A                 # 合并远程分支A到当前分支
   git merge cherry-pick 某分支提交记录A [某分支提交记录B...]    # 将某几个分支指定提交记录中涉及到的内容合并到当前分支（多个提交记录以空格隔开）
   git merge cherry-pick 某分支提交记录A                         # 将某分支指定提交记录中涉及到的内容合并到当前分支
   git merge cherry-pick 某分支提交记录A..某分支提交记录B        # 将某分支的提交记录范围 (A,B] 合并到当前分支，如果想包含 A 则写成 提交记录A^
   ```

* git 解决每次拉取代码都需要用户名和密码的情况
   - git config --global credential.helper store
   - 执行完毕后会在 ~/.gitconfig 中生成一个文件，记录了你的相关信息

* git 设置请求代理
   1. 方案择其一（经测试，第一种方案有效，第二种方案无效，第三种方案未测试，第四种方案未测试。建议用第一种方案）
      1. 设置 socks5 代理
         - git config --global http.proxy 'socks5://127.0.0.1:1080' && git config --global https.proxy 'socks5://127.0.0.1:1080'
      2. 设置 git@ 走代理
         - ~/.ssh/ssh_config
         - ProxyCommand nc -x 127.0.0.1:1080 %h %p
         - 如果不确定，或希望全部走代理，则添加第一行
      3. 设置 http/https 代理
         - git config --global https.proxy http://127.0.0.1:1080 && git config --global https.proxy https://127.0.0.1:1080
      4. 强制转换协议以使用代理
         - git config --global url."https://github".insteadOf git://github
         - git config --global url."git@github.com:".insteadOf "https://github.com/"
         - git config --global url.ssh://git@bitbucket.org/.insteadOf https://bitbucket.org/
   2. 取消代理
      git config --global --unset http.proxy && git config --global --unset https.proxy

* git 合并指定代码到指定分支
   - https://jasonrudolph.com/blog/2009/02/25/git-tip-how-to-merge-specific-files-from-another-branch/
   - http://www.javashuo.com/article/p-zxgtghbw-gc.html
   - https://www.zhihu.com/question/38974391
   - https://blog.csdn.net/u013408061/article/details/115067671
