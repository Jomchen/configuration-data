proxy_set_header Host $http_host
proxy_set_header X-Real-Ip $remote_addr
proxy_set_header X-Forwarded-For $proxy_add_forwarded_for

* 可执行文件格式
   - window 的可执行文件的格式是 pe
   - linux 的可执行文件的格式是 elf

* 资源分配策略--算法
   - 静态分配策略
   - 动态分配策略

* 操作系统的特征
   - 并发：处理多个同时性活动的能力
      - 单cpu
         - 宏观上：这些程序同时在执行
         - 微观上：任何时刻只有一个程序真正在执行，即这些程序在cpu上是轮流执行的
   - 共享：操作系统与多个用户的程序共同使用计算机系统中的资源（共享有限的系统资源）
      - 互斥共享（如打印机）
      - 同时共享（如可重入代码、磁盘文件）
   - 虚拟：一个物理实体映射为若干个对应的逻辑实体--分时或分空间
      - 例如每个进程都运行在一个虚拟的cpu上，但是客观上讲都是每一个时刻只有一个进程运行在物理cpu上
   - 随机：操作系统必须随时对以不可预测的次序发生的事件进行响应并处理
      - 进程的运行速度不可预知：多个进程并发执行，“走走停停”，无法预知每个进程的运行推进的快慢

* 中央处理器
   - 介绍
      - 运算器，控制器，系列的寄存器及高速缓存构成
      - 处理器给予的不同特权级别，能使用的指令集合也不一样
         - x86系列处理器的特权级别R0 R1 R2 R3
            - R0 相当于内核态；R1,R2 是内核态和R3之间；R3 用户态
      - 操作系统的状态
         - 用户态->内核态：中断/异常/陷入机制
         - 内核态->用户态：设置程序状态字 PSW
      - 指令
         - 特权指令（只能由系统控制运行的指令，用户不能使用的指令）
         - 非特权指令（可以由用户控制运行的指令）
   - 常见的控制和状态寄存器
      - 程序计数器（PC: Program Counter），记录将要取出的指令的地址
      - 指令寄存器（IR：Instruction Register），记录最近取出的指令
      - 程序状态字（PSW：Program Status Word），记录处理器的运行状态如条件码、模式、控制位等信息

* 中断和异常机制
   - 中断和异常是系统对某个事件作出的一种反应 
   - 中断和异常的概念
      - 中断的引入：为了支持CPU和设备之间的并行操作，cpu启动设备输入/输出后，设备便可以独立工作，cpu可处理与此无关的事情，待设备完成后向cpu发送中断报告待cpu确认如何处理
         - 中断是外部事件，正在运行的程序所不期望的
         - 中断是异步的，总是返回到下一条指令
      - 异常的引入：如算术错误，内存溢出等情况，这时硬件改变了cpu当前的执行流程，转到相应的错误处理程序或异常处理程序或执行系统调用
         - 由正在执行的指令引发
         - 可以有以下的类别
            - 陷入Trap，同步，返回到下一步指令
            - 故障Fault，同步，返回到当前指令
            - 终止Abort，同步，不会返回
