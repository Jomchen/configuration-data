https://blog.51cto.com/tchuairen/1840596
https://blog.51cto.com/kusorz/2159483
https://my.oschina.net/u/2324318/blog/1833511
https://my.oschina.net/u/2324318/blog/1835661
https://yq.aliyun.com/articles/154341
https://blog.csdn.net/wfs1994/article/details/80862952
https://my.oschina.net/u/3030681/blog/785565
https://www.cnblogs.com/toSeek/p/6117845.html
https://blog.csdn.net/liukuan73/article/details/52318243
https://www.jianshu.com/p/49ae54a411b8
https://www.cnblogs.com/Orgliny/p/5592186.html
https://blog.csdn.net/lyf_ldh/article/details/86013136
https://blog.csdn.net/tulizi/article/details/52962963
https://blog.csdn.net/qq_27211105/article/details/77234781

https://blog.csdn.net/lyf_ldh/article/details/86013136
https://blog.csdn.net/tulizi/article/details/52962963
https://blog.csdn.net/qq_27211105/article/details/77234781

filebeat 命令
https://www.cnblogs.com/blogjun/articles/bcb12b9fa928bfff58ed3743b2accb57.html



教程地址
https://www.jianshu.com/p/d2c8326e8fa3

POST /test/_search?pretty
{
  "query": {
    "match_all": {}
  },
  "sort": {"_id": {"order": "desc"}}
}

POST /test/_doc/_bulk?pretty
{"index": {"_id": "0"}}
{"username": "j00", "age": 20, "address": "this is 00"}
{"index": {"_id": "1"}}
{"username": "j01", "age": 21, "address": "this is 01"}
{"index": {"_id": "2"}}
{"username": "j02", "age": 22, "address": "this is 02"}
{"index": {"_id": "3"}}
{"username": "j03", "age": 23, "address": "this is 03"}
{"index": {"_id": "4"}}
{"username": "j04", "age": 24, "address": "this is 04"}
{"index": {"_id": "5"}}
{"username": "j05", "age": 20, "address": "this is 05"}
{"index": {"_id": "6"}}
{"username": "j06", "age": 20, "address": "this is 06"}
{"index": {"_id": "7"}}
{"username": "j07", "age": 21, "address": "this is 07"}
{"index": {"_id": "8"}}
{"username": "j08", "age": 21, "address": "this is 08"}
{"index": {"_id": "9"}}
{"username": "j09", "age": 21, "address": "this is 04"}

## 教程开始
- 查看集群的健康状态
  - GET /_cat/health?v
- 查看节点
  - GET /_cat/nodes?v
- 查看所有的索引信息
  - GET /_cat/indices?v
- 创建索引（其实是不需要你显示创建索引的）
  - PUT /索引名?pretty
- 删除索引
  - DELETE /索引名?pretty
- 存数据
  - 命令（如果索引不存在它会自动创建）
  - 在第二个命令它会自动创建id号，所以命令有所变动，变成了 post
  ```
    PUT /索引名/_doc/id号?pretty
    {
        "username": "Jomchen"
    }
  ```
  ```
    POST /索引号/_doc?pretty
    {
        "name": "Jomchen"
    }
  ```
- 批量处理数据（数据之间不能有换行）
  ```
    POST /customer/_doc/_bulk?pretty
    {"index":{"_id":"1"}}
    {"name": "John Doe" }
    {"index":{"_id":"2"}}
    {"name": "Jane Doe" }
  ```
  ```
    POST /customer/_doc/_bulk?pretty
    {"update":{"_id":"1"}}
    {"doc": { "name": "John Doe becomes Jane Doe" } }
    {"delete":{"_id":"2"}}
  ```
- 更新数据
  ```
    POST /索引号/_doc/id号/_update?pretty
    {
        "doc": {"username": "Kangkang"}
    }
    POST /索引号/_doc/id号/_update?pretty
    {
        "doc": {"username": "Kangkang", "age": 20}
    }
    POST /索引号/_doc/id号/_update?pretty
    {
        "script": "ctx._source.age += 5"
    }
  ```
- 删除数据
  ```
    DELETE /索引号/_doc/id号?pretty
  ```
- 查看单个数据
  ```
    GET /索引号/_doc/id号?pretty
  ```

- 搜索
  - 搜索中的 "query" 关键字中可以包含 match_all, match, bool, range
  ```
    GET /索引号/_search
    {
      "_source": ["字段名1", "字段名2"], // 只查询这两个字段
      "from": 0, // 从第几条数据开始，默认是0，即第一条
      "size": 10 // 默认是10
      "sort": {"字段": {"order": "desc"}}, // 这里的 desc 可以是 asc
      "query": { "match_all": {} }, // 查询所有
      "query": {"match": {"字段名": "is"}}, // 查询字段必须包含 "is" 
      "query": {"match": {"字段名": "He is"}}, // 查询字段可以包含 "He is" 或 "He" 或 "is"
      "query": { "match_phrase": { "字段": "He is" } }, // 查询字段必须包含 "He is" 这个词组
    }
  ```
